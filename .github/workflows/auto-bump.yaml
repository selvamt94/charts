name: Auto Chart Bump

on:
  workflow_call:
    inputs:
      eventPayload:
        description: "Payload data from upstream repository"
        required: true
        type: string


jobs:
  process-event:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log Event Payload
        run: |
         echo "Payload: ${{  github.event.inputs.chart  }}; ${{  github.event.inputs.branch  }}; ${{  github.event.inputs.version-override  }}"

      - name: Parse JSON Payload
        id: parse_payload
        run: |
          echo "CHART=${{ github.event.inputs.chart }}" >> $GITHUB_ENV
          echo "BRANCH=${{ github.event.inputs.branch }}" >> $GITHUB_ENV
          echo "VERSION_OVERRIDE=${{ github.event.inputs.version-override }}" >> $GITHUB_ENV

      - name: Configure Git for Commit
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Checkout to new branch
        run: |
          git checkout -b "auto-bump_${{ env.CHART }}"

      - name: make pull-scripts
        run: |
          echo "make pull-scripts"
          make pull-scripts

      - name: chart-bump
        run: |
          LOG="DEBUG"
          echo "Running chart-bump with LOG=${LOG}"
          ./bin/charts-build-scripts chart-bump --package="${{ env.CHART }}" --branch="${{ env.BRANCH }}" --version="${{ env.VERSION_OVERRIDE }}"

      - name: read bump version from json file
        id: read_bump_version
        run: |
          echo "Reading data from config/bump_version.json"
          JSON_FILE="config/bump_version.json"

          if [[ ! -f "$JSON_FILE" ]]; then
            echo "Error: $JSON_FILE not found!"
            exit 1
          fi

          NEW_VERSION=$(jq -r '.new_version' "$JSON_FILE")
          if [[ -z "$NEW_VERSION" || "$NEW_VERSION" == "null" ]]; then
            echo "Error: Could not read '.new_version' or value is null/empty in $JSON_FILE"
            exit 1
          fi

          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

          CHARTS_ARRAY_JSON=$(jq -c '.charts' "$JSON_FILE")
          echo $CHARTS_ARRAY_JSON

      - name: Git status
        run: |
          git status
          if [ -z "$(git status --porcelain)" ]; then
            echo "No bump detected"
            exit 1
          fi

      - name: Read App Secrets
        uses: rancher-eio/read-vault-secrets@main
        with:
          secrets: |
            secret/data/github/repo/${{ github.repository }}/github/app-credentials appId | APP_ID ;
            secret/data/github/repo/${{ github.repository }}/github/app-credentials privateKey | PRIVATE_KEY

      - name: Create App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ env.APP_ID }}
          private-key: ${{ env.PRIVATE_KEY }}

      - name: Git Add, Commit, Push Changes
        run: |
          git add .
          git commit -m "auto bump chart: ${{ env.CHART }} version: ${{ env.new_version }}"
          git push origin "auto-bump_${{ env.CHART }}"

      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          gh pr create --base ${{ env.BRANCH }} --head "auto-bump_${{ env.CHART }}" --title "[${{ env.BRANCH }}] auto: ${{ env.CHART }} ${{ steps.read_bump_version.outputs.version }}" --body-file '.github/auto_bump_template.md'